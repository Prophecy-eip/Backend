services:
  db:
    build: ./database
    container_name: database
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - prophecy:/var/lib/postgresql/data
    environment:
      - "POSTGRES_DB"
      - "POSTGRES_USER"
      - "POSTGRES_PASSWORD"
    networks:
      - prophecy

  server:
    build:
      dockerfile: ./server.Dockerfile
      context: .
    container_name: nestjs-server
    command: ["yarn", "start"]
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - prophecy

  run_migration:
    image: backend_server
    build:
      dockerfile: ./server.Dockerfile
      context: .
    command: ["yarn",  "run", "typeorm", "migration:run", "-d", "./src/database/migration/ormconfig.ts"]
    ports:
      - "${MIGRATION_PORT}:${MIGRATION_PORT}"
    networks:
      - prophecy

  revert_migration:
    image: backend_server
    build:
      dockerfile: ./server.Dockerfile
      context: .
    command: ["yarn",  "run", "typeorm", "migration:revert", "-d", "src/database/migration/ormconfig.ts"]
    ports:
      - "${MIGRATION_PORT}:${MIGRATION_PORT}"
    networks:
      - prophecy

  tests:
      depends_on:
        - "db"
        - "server"
      image: backend_server
      container_name: backend_tests
      command: ["yarn", "test", "--coverage"]
      ports:
        - "${TESTS_PORT}:${TESTS_PORT}"
      networks:
        - prophecy

volumes:
  prophecy:

networks:
  prophecy:
