services:
  database:
    build:
      context: .
      dockerfile: .devcontainers/database.Dockerfile
    container_name: prophecy-database
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - prophecy:/var/lib/postgresql/data
    environment:
      - "POSTGRES_DB"
      - "POSTGRES_USER"
      - "POSTGRES_PASSWORD"
    networks:
      - prophecy

  server-dev:
    build:
      context: .
      dockerfile: .devcontainers/backend-development.Dockerfile
    container_name: prophecy-server-dev
    command: ["yarn", "start"]
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - prophecy

  server-prod:
    build:
      context: .
      dockerfile: .devcontainers/backend-production.Dockerfile
    container_name: prophecy-server-prod
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - prophecy

  migration-run:
    build:
      context: .
      dockerfile: .devcontainers/backend-production.Dockerfile
    command: ["yarn",  "migration:run"]
    ports:
      - "${MIGRATION_PORT}:${MIGRATION_PORT}"
    networks:
      - prophecy

  migration-revert:
    build:
      context: .
      dockerfile: .devcontainers/backend-production.Dockerfile
    command: ["yarn",  "migration:revert"]
    ports:
      - "${MIGRATION_PORT}:${MIGRATION_PORT}"
    networks:
      - prophecy

  tests:
    build:
      context: .
      dockerfile: .devcontainers/backend-development.Dockerfile
    container_name: backend_tests
    command: ["yarn", "test", "--coverage"]
    ports:
      - "${TESTS_PORT}:${TESTS_PORT}"
    networks:
      - prophecy

  script_armies-data:
    build:
      context: .
      dockerfile: .devcontainers/armies-data.Dockerfile
    ports:
      - "${MIGRATION_PORT}:${MIGRATION_PORT}"
    networks:
      - prophecy

  script_armies-data_test:
    build:
      context: .
      dockerfile: .devcontainers/armies-data_test.Dockerfile
    ports:
      - "${MIGRATION_PORT}:${MIGRATION_PORT}"
    networks:
      - prophecy

volumes:
  prophecy:

networks:
  prophecy:
