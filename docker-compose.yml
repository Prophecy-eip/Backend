services:
  database:
    build:
      context: .
      dockerfile: .dev-containers/database.Dockerfile
    container_name: prophecy-database
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    volumes:
      - prophecy:/var/lib/postgresql/data
    environment:
      - "POSTGRES_DB"
      - "POSTGRES_USER"
      - "POSTGRES_PASSWORD"
    networks:
      - prophecy

  server-dev:
    build:
      context: .
      dockerfile: .dev-containers/backend-development.Dockerfile
    container_name: prophecy-server-dev
    command: ["yarn", "start"]
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - prophecy

  server-prod:
    build:
      context: .
      dockerfile: .dev-containers/backend-production.Dockerfile
    container_name: prophecy-server-prod
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    networks:
      - prophecy

  migration-run:
    image: backend_server-dev
    build:
      context: .
      dockerfile: .dev-containers/backend-production.Dockerfile
    command: ["yarn",  "run", "typeorm", "migration:run", "-d", "./src/database/migration/ormconfig.ts"]
    ports:
      - "${MIGRATION_PORT}:${MIGRATION_PORT}"
    networks:
      - prophecy

  migration-revert:
    image: backend_server-dev
    build:
      context: .
      dockerfile: .dev-containers/backend-production.Dockerfile
    command: ["yarn",  "run", "typeorm", "migration:revert", "-d", "src/database/migration/ormconfig.ts"]
    ports:
      - "${MIGRATION_PORT}:${MIGRATION_PORT}"
    networks:
      - prophecy

  tests:
      depends_on:
        - "database"
        - "server-dev"
      image: backend_server
      container_name: backend_tests
      command: ["yarn", "test", "--coverage"]
      ports:
        - "${TESTS_PORT}:${TESTS_PORT}"
      networks:
        - prophecy

volumes:
  prophecy:

networks:
  prophecy:
