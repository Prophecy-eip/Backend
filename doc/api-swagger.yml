openapi: 3.0.0
info:
  description: |
    This is the Prophecy Api documentation
  version: 1.0.0
  title: "Prophecy Api"

# host: "localhost" # TODO: change
# basePath: "/api"

tags:
  - name: account
    description: Everything about the user's account
  - name: events
    description: Everything about the events
  - name: armies
    description: Everything about the armies
  - name: prophecies
    description: Everything about the prophecies
  - name: statistics
    description: Everything about the statistics
  - name: settings
    description: Everything about the settings
  - name: users
    description: Everything about the users
  - name: units
    description: Everything about the units
  - name: teams
    description: Everything about the teams
  - name: localtions
    description: Everyting about the locations


#components:
#  securitySchemes:
#    bearerAuth:
#      type: http
#      scheme: bearer

#security:
#  - bearerAuth: []

paths:

# Account: 

  /account/sign-in:
    post:
      summary: Enables the user to sign in
      description: ""
      tags: 
        - account
#      security:
#        - bearerAuth: []
      parameters:
#        - in: header
#          name: ""
#          type: ""
          # TODO: Add header content
        - in: body 
          name: signInCredentials
          description: The sign in required informations
          required: true
          schema:
            $ref: '#/definitions/signInCredentials'
      responses:
        200:
          description: Data received on connection success
          content:
            application/json:
              schema:
                $ref: '#/definitions/connectionResponse'
                
        # TODO: complete
        
  /account/sign-up:
    put:
      summary: Enables the user to create an account
      description: ""
      tags: 
        - account
      parameters:
        # TODO: add header
        - in: body
          name: signUpCredentials
          description: The sign up required informations
          required: true
          schema:
            $ref: '#/definitions/signUpCredentials'
      responses:
        200:
          description: Data received on connection success
          content:
            application/json:
              schema:
                $ref: '#/definitions/connectionResponse'
        # TODO: complete
      
  /account/sign-out:
    post:
      summary: Enables the user to logout
      description: ""
      tags:
        - account
      parameters:
        # TODO: add parameters
      responses:
        200:
          description: OK
        # TODO: complete

# EVENTS

  # create
  /events/create-event:
    post:
      summary: Creates a new event
      description: ""
      parameters:
        # TODO: add parameters
      tags:
        - events
      responses:
        200: 
          description: New event's id
          content:
            application/json:
              schema:
                $ref: '#/definitions/uuid'
        # TODO: complete
        
  /events/save-event/{eventId}:
    put:
      summary: Saves an event for the user
      description: ""
      tags:
        - events
      parameters:
        # TODO: add header
        - in: path
          name: eventId
          description: The event's id
          required: true
          schema:
            $ref: '#/definitions/uuid'
      responses: 
        200:
          description: OK
        # TODO: complete

  # read
  /events/get-events-list:
    get:
      summary: Retrieves the events list
      description: ""
      tags:
        - events
      parameters:
        #TODO: complete
        - in: body
          name: listData # TODO: rename
          description: Specifies the search
          required: false
          schema:
            $ref: '#/definitions/listRequest'
      responses:
        200: 
          description: An array of events id
          content:
            application/json:
              schema:
                $ref: '#/definitions/uuidArray'
        # TODO: complete
        
  /events/get-event/{eventId}:
    get:
      summary: Retrieves an event data
      description: ""
      tags:
        - events
      parameters:
        - in: path
          name: eventId
          required: true
          schema:
            $ref: '#/definitions/uuid'
        # TODO: complete
      responses:
        200:
          description: An event object
          content:
            application/json:
              schema:
                $ref: '#/definitions/eventObject'
        # TODO
  
  /events/get-saved-events-list:
    get:
      summary: Retrieves the saved events list
      description: ""
      tags:
        - events
      parameters:
        # TODO: complete
        - in: body
          name: listData # TODO: change
          description: The list filters
          schema:
            $ref: '#/definitions/listRequest'
      responses: 
        200:
          description: List of events ids
          content:
            application/json:
              schema:
                $ref: '#/definitions/uuidArray'
        # TODO: complete
  
  # update
  /event/update-event/{eventId}:
    put:
      summary: "Updates an event's informations"
      description: ""
      tags:
        - "events"
      parameters:
        # TODO: complete
        - in: path
          name: eventId
          description: The event's id
          schema:
            $ref: '#/definitions/uuid'
        - in: body
          name: event
          description: The event's data
          schema:
            $ref: '#/definitions/eventObject'
      responses:
        200:
          description: OK
        # TODO: complete
        
  /events/unsave-event/{eventId}:
    put:
      summary: Unsaves an event for the user
      description: ""
      tags:
        - events
      parameters:
        # TODO: complete
        - in: path
          name: eventId
          description: The event's id
          schema:
            $ref: '#/definitions/uuid'
      responses:
        200:
          description: OK
        # TODO: complete

  # delete
  /events/delete-event/{eventId}:
    delete:
      summary: Deletes an event
      description: ""
      tags:
        - events
      parameters:
        # TODO: complete
        - in: path
          name: eventId
          description: The event's id
          schema:
            $ref: '#definitions/uuid'
      responses:
        200:
          description: OK
        # TODO: complete
  

# ARMIES LISTS

  # create
  /armies/create-army:
    post:
      parameters:
        # TODO
      tags:
        - "armies"
      summary: "Creates a new army"
      description: ""
      responses:
        # TODO
  
  # read
  /armies/get-armies-list:
    get:
      parameters:
        # TODO
      tags:
        - "armies"
      summary: "Retrieves the user's armies list"
      description: ""
      responses:
        # TODO
  
  /armies/get-army/{armyId}:
    get:
      parameters:
        # TODO
      tags:
        - "armies"
      summary: "Retrieves an army data"
      description: ""
      responses:
        # TODO
      
  
  # update
  /armies/update-army/{armyId}:
    put:
      parameters:
        # TODO
      tags:
        - "armies"
      summary: "Updates an army"
      description: "Updates an army"
      responses:
        # TODO
      
  # delete
  
  /armies/delete-army/{armyId}:
    delete:
      parameters:
        # TODO
      tags:
        - "armies"
      summary: "Deletes an army"
      description: "Deletes an army"
      responses:
        # TODO

# ARMIES TAGS
  
  # create
  /armies/tags/create-tag:
    post:
      parameters:
        # TODO
      tags:
        - "armies"
      summary: "Creates an army tag"
      descrition: "Creates an army tag"
      responses:
        # TODO
  
  # read
  /armies/tags/get-tags-list:
    get:
      parameters:
        # TODO
      tags: 
        - "armies"
      summary: "Retrieves the user's armies tags list"
      description:
      responses:
        # TODO
  
  /armies/tag/get-tag/{tagId}:
    get:
      parameters:
        # TODO
      tags:
        - "armies"
      summary: "Retrieves a tag data"
      description: ""
      responses:
        # TODO
      
  # update
  /armies/tag/update-tag/{tagId}:
    put:
      parameters:
        # TODO
      tags:
        - "armies"
      summary: "Updates an army tag"
      description: ""
      responses: 
        # TODO
  
  # delete
  /armies/tag/delete-tag/{tagId}:
    delete:
      parameters:
        # TODO
      tags:
        - "armies"
      summary: "Deletes an army tag"
      description: ""
      responses:
        # TODO
 
  
# PROPHECIES

  # read
  /prophecies/get-prophecy:
    get:
      parameters:
        # TODO
      tags:
        - "prophecies"
      summary: "Retrieves a prophecy for the user"
      description: ""
      responses:
        # TODO
  
  /prophecies/get-history:
    get:
      parameters:
        # TODO
      tags:
        - "prophecies"
      summary: "Retrieves the prophecies histrory"
      description: ""
      responses:
        # TODO

  
# STATISTICS

  # create
  /statistics/create-statistic:
    post:
      parameters:
        # TODO
      tags:
        - "statistics"
      summary: "Creates a new statistic"
      descirption: ""
      
  # read
  /statistics/get-statistics-list:
    get:
      parameters:
        # TODO
      tags:
        - "statistics"
      summary: "Retrieves the user's statistics list"
      description: ""
      responses:
        # TODO
        
  /statistics/get-statistic/{statisticId}:
    get:
      parameters:
        # TODO
      tags:
        - "statistics"
      summary: "Retrieves a statistic data"
      description: ""
      responses:
        # TODO
  
  # update    
  /statistics/update-statistic/{statisticId}:
    put:
      parameters:
        # TODO
      tags:
        - "statistics"
      summary: "Updates a statistic"
      description: ""
      responses:
        # TODO
      
  # delete
  /statistics/delete-statistic/{statisticId}:
    delete:
      parameters:
        # TODO
      tags:
        - "statistics"
      summary: "Deletes a statistic"
      description: ""
      responses:
        # TODO
  

# SETTINGS

  # update
  /settings/account/update-password:
    put:
      parameters:
        # TODO
      tags:
        - "settings"
      summary: "Updates the user's password"
      description: ""
      responses:
        # TODO
  
  /settings/account/update-username:
    put:
      parameters:
        # TODO
      tags:
        - "settings"
      summary: "Updates the user's username"
      description: ""
      responses:
        # TODO

  /settings/account/update-profile-picture:
    put:
      parameters:
        # TODO
      tags:
        - "settings"
      summary: "Updates the user's profile picture"
      description: ""
      responses: 
        # TODO
  
  /settings/account/update-email-address:
    put:
      parameters:
        # TODO
      tags:
        - "settings"
      summary: "Updates the user's email address"
      description: ""
      responses: 
        # TODO
  
  # delete
  /settings/account/delete-account:
    delete:
      parameters:
        # TODO
      tags:
        - "settings"
      summary: "Deletes the user's account"
      description: ""
      responses:
        # TODO
      
      
# TEAMS

  # create
  /teams/create-team:
    post:
      parameters:
        # TODO
      tags:
        - "teams"
      summary: "Creates a new team"
      description: ""
      responses:
        # TODO
        
  /teams/{teamId}/create-message:
    put:
      parameters:
        # TODO
      tags:
        - "teams"
      summary: "Creates a new message in the team"
      description: ""
      responses:
        # TODO  
      
  # read
  /teams/get-teams-list:
    get:
      parameters:
        # TODO
      tags:
        - "teams"
      summary: "Retrieves the user's teams list"
      description: ""
      responses:
        # TODO
  
  /teams/get-team/{teamId}:
    get:
      parameters:
        # TODO
      tags:
        - "teams"
      summary: "Retrieves a team data"
      description: ""
      responses:
        # TODO
        
  /teams/{teamId}/get-messages:
    get:
      parameters:
        # TODO
      tags:
        - "teams"
      summary: "Retrieves the team's messages"
      description: ""
      responses:
        # TODO
        
  # update
  /teams/rename-team/{teamId}:
    put:
      parameters:
        # TODO
      tags:
        - "teams"
      summary: "Renames a team"
      description: ""
      responses:
        # TODO
        
  /teams/{teamId}/update-message/{messageId}:
    put:
      parameters:
        # TODO
      tags:
        - "teams"
      summary: "Updates a team's message"
      description: ""
      responses:
        # TODO
  
  /teams/{teamId}/invite-user/{userId}:
    put:
      parameters: 
        # TODO
      tags:
        - "teams"
      summary: "Invites a user in a team"
      description: ""
      responses:
        # TODO
      
    /teams/{teamId}/respond-to-invitation:
      put:
        parameters:
          # TODO
        tags:
          - "teams"
        summary: "Sends a response to a team invitation"
        description: ""
        responses:
          # TODO
          
    # delete
    /teams/delete-team/{teamId}:
      delete:
        parameters:
          # TODO
        tags:
          - "teams"
        summary: "Deletes a team"
        description: ""
        responses:
          # TODO
      
  /teams/{teamId}/delete-message/{messageId}:
    delete:
      parameters:
        # TODO
      tags:
        - "teams"
      summary: "Deletes a team's message"
      description: ""
      responses:
        # TODO


# UNITS
  
  # create
  /units/create-unit:
    post:
      parameter:
        # TODO
      tags:
        - "units"
      summary: "Creates a unit"
      description: ""
      responses:
        # TODO
  
  # read
  /units/get-units-list:
    get:
      parameters:
        # TODO
      tags:
        - "units"
      summary: "Retrieves the user's units list"
      descriptions: ""
      responses:
        # TODO
  
  /units/get-unit/{unitId}:
    get:
      parameters:
        # TODO
      tags:
        - "units"
      summary: "Retrieves a unit data"
      description: ""
      responses:
        # TODO
  
  # update
  /units/update-unit/{unitId}:
    put:
      parameters:
        # TODO
      tags:
        - "units"
      summary: "Updates a unit"
      description: ""
      responses:
        # TODO
  
  # delete
  /units/delete-unit/{unitId}:
    delete:
      parameters:
        # TODO
      tags:
        - "units"
      summary: "Deletes a unit"
      description: ""
      responses:
        # TODO
  

# Users

  # create

  # read
  /users/get-users-list:
    get:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Retrieves a users list"
      description: ""
      responses: 
        # TODO
        
  /users/get-user/{userId}:
    get:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Retrieves a user data"
      description: ""
      responses:
        # TODO
        
  /users/get-blocked-users-list:
    get:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Retrieves the blocked users list"
      description: ""
      responses:
        # TODO
        
  /users/{userId}/profile/statistics/get-shared-statistics-list:
    put:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Retrieves the list of shared statistics"
      description: ""
      responses:
        # TODO
        
  /users/{userId}/profile/armies/get-shared-armies-list:
    get:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Retrieves the shared armies list"
      description: ""
      responses:
        # TODO
      
  /users/{userId}/profile/pictures/get-shared-pictures-list:
    get:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Retreves the shared pictures list"
      description: ""
      responses:
        # TODO
      
  /users/profile/pictures/get-sared-picture/{pictureId}:
    get:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Retrieves a shared picture data"
      description: ""
      responses:
        # TODO
  
  /users/{userId}/profile/followers/get-followers-list:
    get:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Retrieves a user followers list"
      description: ""
      responses:
        # TODO
    
  /users/{userId}/profile/followers/get-followed-users-list:
    get:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Retrieves the followed users list"
      description: ""
      responses:
        # TODO
        
  #update
  /users/follow-user/{userId}:
    put:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Follows a user"
      description: ""
      responses:
        # TODO

  /users/unfollow-user/{userId}:
    put:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Unfollows a user"
      description: ""
      responses:
        # TODO

  /users/block-user/{userId}:
    put:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Blocks a user"
      description: ""
      responses:
        # TODO

  /users/unblock-user/{userId}:
    put:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Unblocks a user"
      description: ""
      responses:
        # TODO

  /users/profile/statistics/share-statistic/{statisticId}:
    put:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Shares a statistic"
      description: ""
      responses:
        # TODO

  /users/profile/statistics/unshare-statistic/{statisticId}:
    put:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Unshares a statistic"
      description: ""
      responses:
        # TODO

  /users/profile/armies/share-army/{armyId}:
    put:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Shares an army list"
      description: ""
      responses:
        # TODO

  /users/profile/armies/unshare-army/{armyId}:
    put:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Unshares an army list"
      description: ""
      responses:
        # TODO

  /users/profile/pictures/share-picture:
    put:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Shares a picture"
      description: ""
      responses:
        # TODO

  /users/profile/pictures/unshare-picture/{pictureId}:
    delete:
      parameters:
        # TODO
      tags:
        - "users"
      summary: "Unshares a picture"
      description: ""
      responses:
        # TODO


# LOCATIONS

  # create
  /locations/create-location:
    post:
      summary: Creates a location
      description: ""
      tags:
        - locations
      parameters:
        # TODO
      responses:
        # TODO
  
  # read
  /locations/get-locations-list:
    get:
      summary: Retrieves a locations list
      description: ""
      tags:
        - locations
      parameters:
        # TODO
      responses:
        # TODO
        
  /locations/get-location/{locationId}:
    get:
      summary: Retrieves a location information
      description: ""
      tags:
        - locations
      parameters:
        # TODO
      responses:
        # TODO
  
  # update
  /locations/update-location/{locationId}:
    put:
      summary: Updates a location data
      description: ""
      tags:
        - locations
      parameters:
        # TODO
      responses:
        # TODO

  # delete
  /locations/delete-location/{locationId}:
    delete:
      summary: Deletes a location
      description: ""
      tags:
        - locations
      parameters:
        # TODO
      responses:
        # TODO
  
definitions:

  signInCredentials:
    description: Informations required to sign in
    properties:
      username:
        type: string
        description: The user's username
        example: username
      password:
        type: string
        description: The user's password
        example: password
    required:
      - username
      - password
      
  signUpCredentials:
    description: Informations required to sign up
    properties:
      username:
        type: string
        description: The user's username
        exemple: "username"
      email:
        type: string
        description: The user's email address
        example: email@address.com
      password:
        type: string
        description: The user's password
        example: password
    required:
      - username
      - email
      - password
      
  connectionResponse:
    description: The data sent on connection
    properties:
      accessToken:
        type: string
        description: The required token
      refreshToken:
        type: string
        description: The token to refresh the access token
      userId:
        type: string
        description: The user's id
        format: uuid
    required:
      - accessToken
      - refreshToken # Keep refresh token ?
      - userId
      
  uuid:
    type: string
    format: uuid
      
  uuidArray:
    type: array
    items:
      $ref: '#/definitions/uuid'
      
  length:
    type: integer
    # format: uint
    # example: 42
    
  date:
    type: string
    format: date
    example: DD-MM-YYYY
    
  time:
    type: string
    format: time
    example: HH-MM
    
  link:
    type: string
    format: link
    example: www.link.com
    
  name:
    type: string
    example: name
    
  description:
    type: string
    example: description
    
  tag:
    type: string
    example: tag
    
  listRequest:
    description: Data requested on a list
    properties:
      length:
        type: integer
        format: uint
        example: 42
      flags:
        type: array
        items:
          type: string
          example: flag1
          
  eventObject:
    description: Event data
    properties:
      id: 
        $ref: '#/definitions/uuid'
      name:
        $ref: '#/definitions/name'
      description:
        $ref: '#/definitions/description'
      tag:
        $ref: '#/definitions/tag'
      date:
        $ref: '#/definitions/date'
      time:
        $ref: '#/definitions/time'
      link:
        $ref: '#/definitions/link'
      locationId:
        $ref: '#/definitions/uuid'
    required:
      - id
      - name
      - description
      - tag
      - date
      - time
      - locatonId
      
  locationObject:
    
      

# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /Victoire-Rabeau/Prophecy/1.0.0
schemes:
 - https
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/Victoire-Rabeau/Prophecy-Api/1.0.0