on: [ pull_request ]

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup & Install
        run: | 
          printf "SERVER_PORT=${{ secrets.SERVER_PORT }}\n
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}\n
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}\n
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}\n
          DATABASE_IP=${{ secrets.DATABASES_IP }}\n
          DATABASE_PORT=${{ secrets.DATABASES_PORT }}\n
          JWT_SECRET=${{ secrets.JWT_SECRET }}\n
          TESTS_PORT=${{ secrets.TESTS_PORT }}\n
          MIGRATION_PORT=${{ secrets.MIGRATION_PORT }}\n
          SES_REGION=${{ secrets.AWS_SES_REGION }}\n
          SES_ACCESS_KEY=${{ secrets.AWS_SES_ACCESS_KEY }}\n
          SES_SECRET_ACCESS_KEY=${{ secrets.AWS_SES_SECRET_ACCESS_KEY }}\n
          SES_FROM_ADDRESS=${{ secrets.AWS_SES_FROM_ADDRESS }}\n
          API_URL=${{ secrets.API_URL }}\n
          MATHS_KEY=${{ secrets.MATHS_KEY }}\n" > .env
          printf "DATABASE_IP=${{ secrets.DATABASES_IP  }}\n
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}\n
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}\n
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}\n" > ./scripts/armies_data/.env

      - name: Build & Run Docker
        run: | 
          docker-compose -f docker-compose.yml up --build -d db server
          docker-compose up run_migration

      - name: Run Unit Tests
        run: docker-compose -f docker-compose.yml up tests
